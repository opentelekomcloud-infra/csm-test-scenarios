---
- name: Prepare controller variables
  import_playbook: prepare_variables.yml
  vars:
    scenario_name: 'csm_controller lb_monitoring'

- name: Prepare variables
  hosts: localhost
  vars_files:
    - "./vars/csm_controller.yml"
    - "./vars/lb_monitoring.yml"
  tasks:
    - name: Register lb controller host
      add_host:
        name: "{{ lb_monitoring.lb_ctrl_ip }}"
        groups: lb_host
        ansible_ssh_user: linux
        ansible_ssh_private_key_file: "{{ csm_controller.controller_key }}"
        ansible_ssh_common_args: >
          -o UserKnownHostsFile=/dev/null
          -o ProxyCommand='ssh -W %h:%p
          -q linux@{{ csm_controller.csm_controller_fip }}
          -i {{ csm_controller.controller_key }}
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null'
          -o PasswordAuthentication=no

- name: Prepare csm runner
  hosts: lb_host
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-wheel

    - name: Install csm-test-utils
      pip:
        executable: pip3
        name: csm-test-utils

- name: Checking reporting processes
  hosts: lb_host
  become: yes
  tasks:
    - name: Get reporting processes list from remote host  # noqa 301 305
      ignore_errors: yes
      shell: "ps aux | grep 'csm_test_utils monitor' | awk '{print $2}'"
      register: process_monitor
    - name: Kill running reporting processes  # noqa 301 305
      ignore_errors: yes
      shell: "kill {{ process_monitor.stdout_lines[0] }}"
    - name: Waiting for status
      wait_for:
        path: "/proc/{{ process_monitor.stdout_lines[0] }}/status"
        state: absent
      ignore_errors: yes

- name: Start reporting for scenario
  hosts: lb_host
  become: yes
  vars_files:
  - "./vars/csm_controller.yml"
  - "./vars/lb_monitoring.yml"
  vars:
    elb_ip: "{{ lb_monitoring.lb_fip }}"
    tlg: "http://{{ csm_controller.csm_controller_fip }}/lb"
    nohup: "nohup /usr/bin/python3 -m csm_test_utils monitor"
  tasks:
    - name: Execute csm_test_utils  # noqa 301 305
      shell: "{{ nohup }} --target {{ elb_ip }} --telegraf {{ tlg }} &"
