---
- name: Prepare key and variables for scenario
  hosts: localhost
  environment:
    OS_CLOUD: "{{ lookup('env', 'CSM_CLOUD') | default('csm', True) }}"
  tasks:
    - name: Swift get object
      swift_client:
        state: "{{ swift_operation }}"
        container: "{{ swift_container }}"
        object_name: infra_eips
      register: watchers

    - name: Getting list of instances ips from inventory
      set_fact:
        list_watchers: "{{ (watchers.object.content | from_yaml).vpc_a }}"

    - name: Convert watchers dict to list for ping script
      set_fact:
        list_watchers: |
            {% set res = [] -%}
            {% for key, value in list_watchers.items() -%}
                {% set ignored = res.extend([{'ip': value, 'name': key }]) -%}
            {%- endfor %}
            {{ res }}

- name: Ping hosts, normal packets
  hosts: localhost
  vars:
    metric_name: csm_out_ping.64
  tasks:
    - name: Measure latency
      script: >
        ping.py --metric_name "{{ metric_name }}"
        --hosts "{{ list_watchers }}"
      args:
        executable: "/usr/bin/python3"
      register: serialized_metrics

    - name: Register metrics
      set_fact:
        metrics: "{{ serialized_metrics.stdout }}"

- name: Send metrics to graphite
  hosts: localhost
  tasks:
    - name: Send metrics
      script: >
        send_metrics.py "{{ metrics }}"
      args:
        executable: "/usr/bin/python3"

- name: Ping hosts, large packets 1500
  hosts: localhost
  vars:
    metric_name: csm_out_ping.1500
  tasks:
    - name: Measure latency
      script: >
        ping.py --metric_name "{{ metric_name }}"
        --hosts "{{ list_watchers }}"
        --packet_size 1492
      args:
        executable: "/usr/bin/python3"
      register: large_serialized_metrics

    - name: Register metrics
      set_fact:
        large_metrics: "{{ large_serialized_metrics.stdout }}"

- name: Send metrics to graphite
  hosts: localhost
  tasks:
    - name: Send metrics
      script: >
        send_metrics.py "{{ large_metrics }}"
      args:
        executable: "/usr/bin/python3"
